import { useEffect, useState, useRef } from 'react';
import { Link } from 'react-router-dom';

import SectionHeading from '@components/text/SectionHeading';
import HeadingUnderline from '@components/text/HeadingUnderline';

const DescriptionWithImage = (props) => {
  let { title, description, ctaText, linkTo, value1, value2, value3, autoplayDelay } = props;

  const [ activeValue, setActiveValue ] = useState('v1');
  const timeoutRef = useRef(null);

  const nextValue = () => {
    if (activeValue === 'v1') {
      setActiveValue('v2');
    } else if (activeValue === 'v2') {
      setActiveValue('v3');
    } else if (activeValue === 'v3') {
      setActiveValue('v1');
    }
  };

  const resetTimeout = () => {
    if (timeoutRef.current) {
      clearTimeout(timeoutRef.current);
    }
  };

  useEffect(() => {
    resetTimeout();

    timeoutRef.current = setTimeout(
      () => {
        nextValue();
      },
      parseInt(autoplayDelay, 10)
    );

    return () => resetTimeout();
  }, [ activeValue ]);

  const handleHoverValue = (value) => {
    resetTimeout();
    setActiveValue(value);
  };

  return (
    <div className='description-with-image__container section'>
      <div className='description-with-image__text'>
        <SectionHeading heading={title} className='description-with-image__title' />
        <HeadingUnderline />
        <p className='description-with-image__description text-font'>{description}</p>
        <div className='description-with-image__values text-font'>
          <span
            className={activeValue === 'v1' ? 'v1 active' : 'v1'}
            onMouseOver={() => handleHoverValue('v1')}
          >
            {value1}
          </span>
          <span
            className={activeValue === 'v2' ? 'v2 active' : 'v2'}
            onMouseOver={() => handleHoverValue('v2')}
          >
            {value2}
          </span>
          <span
            className={activeValue === 'v3' ? 'v3 active' : 'v3'}
            onMouseOver={() => handleHoverValue('v3')}
          >
            {' '}
            {value3}
          </span>
        </div>
        <Link to={linkTo}>
          <button className='description-with-image__cta text-font'>{ctaText}</button>
        </Link>
      </div>
      <div className='description-with-image__image'>
        {activeValue === 'v1' && (
          <svg className='v1' width='100%' viewBox='0 0 261 196' xmlns='http://www.w3.org/2000/svg'>
            {' '}
            <path
              d='M259.242 165.192c-35.37-35.587-92.46-36.339-128.742-1.694-36.281-34.645-93.373-33.893-128.742 1.694L0 166.962l1.758 1.846c35.37 35.587 92.46 36.339 128.742 1.694 36.281 34.645 93.373 33.893 128.742-1.694l1.758-1.783-1.758-1.833zM67.015 190.927c-22.27.052-43.706-8.53-59.857-23.965 33.633-31.947 86.18-31.947 119.813 0-16.176 15.46-37.652 24.043-59.956 23.965zm126.97 0c-22.27.052-43.705-8.53-59.856-23.965 33.635-31.955 86.19-31.955 119.825 0-16.172 15.45-37.636 24.032-59.931 23.965h-.038z'
              fill='#ffffff'
            />{' '}
            <path
              d='M130.5 105c50.25-.037 96.466-27.652 120.5-72h-5.713c-23.535 41.413-67.35 66.972-114.806 66.972-47.455 0-91.27-25.56-114.806-66.972H10c24.034 44.348 70.25 71.963 120.5 72z'
              fill='#ffffff'
            />{' '}
            <path
              d='M130 62c17.118 0 30.995-13.874 31-30.992C161.005 13.891 147.134.01 130.017 0 112.899-.01 99.014 13.857 99 30.975c.007 17.122 13.878 31.004 31 31.025zm0-56.994a25.994 25.994 0 1 1-25.994 25.969C104.02 16.625 115.65 4.995 130 4.981v.025z'
              fill='#ffffff'
            />{' '}
          </svg>
        )}
        {activeValue === 'v2' && (
          <svg className='v2' width='100%' viewBox='0 0 112 129' xmlns='http://www.w3.org/2000/svg'>
            {' '}
            <path
              d='M96.378 64.592a89.546 89.546 0 0 0 15.302-31.027l.32-1.186-1.187-.32A89.94 89.94 0 0 0 76.3 29.565 89.713 89.713 0 0 0 57.024.873L56.157 0l-.892.866a89.437 89.437 0 0 0-19.37 28.656 89.6 89.6 0 0 0-34.548 2.273l-1.193.301.35 1.23A89.815 89.815 0 0 0 15.592 64.42 89.89 89.89 0 0 0 .326 95.392L0 96.62l1.187.326a90.04 90.04 0 0 0 23.504 3.128c3.69.001 7.377-.226 11.038-.683a89.46 89.46 0 0 0 19.253 28.742l.867.866.868-.866a89.813 89.813 0 0 0 19.418-28.6 89.43 89.43 0 0 0 11.26.719 90.731 90.731 0 0 0 23.264-3.073l1.187-.313-.314-1.192a89.447 89.447 0 0 0-15.154-31.083zm12.595-30.48a87.084 87.084 0 0 1-14.152 28.47A89.773 89.773 0 0 0 82.066 49.63a88.785 88.785 0 0 0-4.805-17.705 87.592 87.592 0 0 1 31.712 2.188zM55.88 91.834a88.802 88.802 0 0 1-12.306-5.924 89.442 89.442 0 0 1-11.284-7.725 88.223 88.223 0 0 1 .068-27.463 88.998 88.998 0 0 1 23.639-13.556 88.449 88.449 0 0 1 23.78 13.784 88.383 88.383 0 0 1-.068 27.236A88.302 88.302 0 0 1 55.88 91.833zm23.196-10.048a86.616 86.616 0 0 1-4.48 15.032 87.226 87.226 0 0 1-15.264-3.688 91.201 91.201 0 0 0 19.732-11.344h.012zm-26.66 11.29a87.984 87.984 0 0 1-15.111 3.606A87.394 87.394 0 0 1 32.948 81.8a92.702 92.702 0 0 0 9.396 6.219 91.82 91.82 0 0 0 10.06 5.057h.012zM29.478 75.794A86.692 86.692 0 0 1 18.68 64.402a86.755 86.755 0 0 1 10.854-11.344 90.708 90.708 0 0 0-.056 22.737zm3.538-28.717a87.684 87.684 0 0 1 4.406-14.865 87.805 87.805 0 0 1 15.08 3.687 92.038 92.038 0 0 0-19.486 11.178zM59.473 35.9a86.845 86.845 0 0 1 15.284-3.65 86.412 86.412 0 0 1 4.405 15.068A90.695 90.695 0 0 0 59.455 35.9h.018zm23.135 17.422A87.357 87.357 0 0 1 93.289 64.58a88.163 88.163 0 0 1-10.73 11.209c.943-7.459.96-15.005.049-22.467zM56.15 3.484A87.371 87.371 0 0 1 73.785 29.91a89.41 89.41 0 0 0-17.776 4.609 89.865 89.865 0 0 0-17.597-4.634 86.979 86.979 0 0 1 17.733-26.4h.006zM3.175 33.866A87.346 87.346 0 0 1 34.96 31.87a89.565 89.565 0 0 0-4.86 17.514 88.963 88.963 0 0 0-12.983 13.01A87.334 87.334 0 0 1 3.175 33.865zM3.033 94.87A87.218 87.218 0 0 1 17.117 66.41a89.51 89.51 0 0 0 12.921 13.065 89.92 89.92 0 0 0 4.775 17.532 87.192 87.192 0 0 1-31.78-2.138zm52.847 30.633a87.137 87.137 0 0 1-17.634-26.485 89.804 89.804 0 0 0 17.634-4.554 89.508 89.508 0 0 0 17.763 4.689 87.372 87.372 0 0 1-17.763 26.35zm21.246-28.335a89.11 89.11 0 0 0 4.891-17.686 90.39 90.39 0 0 0 12.817-12.905A86.861 86.861 0 0 1 108.85 95.11 87.71 87.71 0 0 1 77.1 97.162l.025.006z'
              fill='#ffffff'
            />{' '}
            <path
              d='M56.006 51c-5.663-.002-10.77 3.285-12.938 8.33-2.169 5.044-.973 10.851 3.03 14.713 4.004 3.863 10.026 5.019 15.258 2.93C66.588 74.883 70 69.96 70 64.5c-.007-7.45-6.267-13.49-13.994-13.5zm0 24.588c-4.654.003-8.852-2.7-10.634-6.846-1.783-4.146-.799-8.92 2.493-12.093 3.291-3.174 8.241-4.123 12.541-2.404 4.3 1.719 7.102 5.766 7.1 10.255-.007 6.121-5.152 11.082-11.5 11.088z'
              fill='#ffffff'
            />{' '}
          </svg>
        )}
        {activeValue === 'v3' && (
          <svg className='v3' width='100%' viewBox='0 0 143 122' xmlns='http://www.w3.org/2000/svg'>
            {' '}
            <path
              d='M143 7.377V6h-1.559C105.336 6.002 75.835 34.522 75 70.233v2.754c.718 27.2 23.158 48.91 50.66 49.013h1.392v-1.377c.047-22.955-15.616-43.03-38.073-48.8 31.265-5.94 53.904-32.949 54.021-64.446zm-32.702 79.598c8.672 8.57 13.676 20.114 13.971 32.237-25.405-.827-45.771-21.073-46.486-46.211 12.247.347 23.89 5.344 32.515 13.953v.02zM77.783 70.213c.835-33.71 28.344-60.795 62.42-61.46-.878 33.688-28.365 60.744-62.42 61.439v.02zM48.472 25.125C36.039 12.828 19.162 5.945 1.58 6H0v1.377c.115 31.503 22.764 58.514 54.04 64.45-22.462 5.77-38.134 25.84-38.103 48.796V122h1.392c27.508-.102 49.953-21.814 50.671-49.016v-1.377-1.377c-.335-16.974-7.34-33.152-19.528-45.105zM2.832 8.754c16.412.27 32.074 6.842 43.677 18.326C58.177 38.502 64.9 53.962 65.258 70.196 31.201 69.494 3.713 42.44 2.832 8.754zM18.79 119.198c.719-25.137 21.088-45.38 46.496-46.207-.718 25.137-21.088 45.38-46.496 46.207zM104 2.422L102.707 0C89.637 6.847 78.68 17.063 70.993 29.567 63.315 17.062 52.361 6.845 39.293 0L38 2.422C51.324 9.39 62.358 19.981 69.804 32.947L71.007 35l1.203-2.053C79.658 19.987 90.686 9.397 104 2.422z'
              fill='#ffffff'
            />{' '}
          </svg>
        )}
      </div>
    </div>
  );
};

export default DescriptionWithImage;
